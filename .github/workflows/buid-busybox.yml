name: Build and Release Busybox for RISC-V

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  workflow_dispatch:
    inputs:
      busybox_version:
        description: 'Busybox version to build (e.g., 1_36_1)'
        required: false
        default: 'latest'
      riscv_bits:
        description: 'RISC-V architecture bits (32, 64, or both)'
        required: false
        default: 'both'
        type: choice
        options:
        - '32'
        - '64'
        - 'both'

permissions:
  contents: write
  actions: read

env:
  DEFAULT_BUSYBOX_VERSION: "1_36_1"

jobs:
  build-busybox:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        arch: [32, 64]

    outputs:
      busybox_version: ${{ steps.version.outputs.busybox_version }}
      release_name: ${{ steps.version.outputs.release_name }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential git curl wget tar xz-utils flex bison libncurses-dev bc

    - name: Setup RISC-V GNU Toolchain
      run: |
        if [ "${{ matrix.arch }}" = "32" ]; then
          TOOLCHAIN_URL="https://github.com/riscv-collab/riscv-gnu-toolchain/releases/download/2024.02.02/riscv32-glibc-ubuntu-22.04-gcc-nightly-2024.02.02-nightly.tar.gz"
        else
          TOOLCHAIN_URL="https://github.com/riscv-collab/riscv-gnu-toolchain/releases/download/2024.02.02/riscv64-glibc-ubuntu-22.04-gcc-nightly-2024.02.02-nightly.tar.gz"
        fi

        echo "Downloading toolchain from: $TOOLCHAIN_URL"
        wget -q "$TOOLCHAIN_URL" -O toolchain.tar.gz

        # 解压到 /opt/riscv32 或 /opt/riscv64，strip-components=1 避免多层目录
        sudo mkdir -p /opt/riscv${{ matrix.arch }}
        sudo tar -xzf toolchain.tar.gz -C /opt/riscv${{ matrix.arch }} --strip-components=1

        # 添加到 PATH
        echo "/opt/riscv${{ matrix.arch }}/bin" >> $GITHUB_PATH

        # 验证
        /opt/riscv${{ matrix.arch }}/bin/riscv${{ matrix.arch }}-unknown-linux-gnu-gcc --version

    - name: Determine Busybox version
      id: version
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          if [[ "${{ github.event.inputs.busybox_version }}" == "latest" ]]; then
            BUSYBOX_VERSION=$(git ls-remote --tags https://git.busybox.net/busybox | \
                             grep -o 'refs/tags/[0-9_]\+$' | \
                             sort -V | tail -n 1 | sed 's|refs/tags/||')
          else
            BUSYBOX_VERSION="${{ github.event.inputs.busybox_version }}"
          fi
        elif [[ "${{ github.event_name }}" == "push" && "${{ github.ref_type }}" == "tag" ]]; then
          TAG_NAME="${{ github.ref_name }}"
          BUSYBOX_VERSION=$(echo "$TAG_NAME" | sed 's/^v//' | sed 's/\./_/g')
        else
          BUSYBOX_VERSION="$DEFAULT_BUSYBOX_VERSION"
        fi

        echo "busybox_version=$BUSYBOX_VERSION" >> $GITHUB_OUTPUT
        echo "release_name=busybox-riscv${{ matrix.arch }}-$BUSYBOX_VERSION" >> $GITHUB_OUTPUT

    - name: Cache Busybox source
      uses: actions/cache@v3
      id: cache-source
      with:
        path: busybox
        key: busybox-source-${{ steps.version.outputs.busybox_version }}

    - name: Download Busybox source
      if: steps.cache-source.outputs.cache-hit != 'true'
      run: |
        git clone --depth 1 --branch ${{ steps.version.outputs.busybox_version }} \
          https://git.busybox.net/busybox

    - name: Configure Busybox
      run: |
        cd busybox
        make clean || true
        CROSS_COMPILE=riscv${{ matrix.arch }}-unknown-linux-gnu- make defconfig
        CROSS_COMPILE=riscv${{ matrix.arch }}-unknown-linux-gnu- make kernelversion

    - name: Build Busybox
      run: |
        cd busybox
        CROSS_COMPILE=riscv${{ matrix.arch }}-unknown-linux-gnu- make -j$(nproc)

    - name: Create installation package
      run: |
        mkdir -p /tmp/busybox-package
        cd /tmp/busybox-package

        # 复制 RISC-V busybox
        cp ../busybox/busybox .

        # 手动生成 symlinks，不执行二进制
        COMMANDS=$(cat ../busybox/Documentation/built-in-commands | tr '\n' ' ')
        for cmd in $COMMANDS; do
          if [ "$cmd" != "busybox" ]; then
            ln -sf busybox "$cmd"
          fi
        done

        # 生成 README
        cat > README.txt << EOF
Busybox ${{ steps.version.outputs.busybox_version }} for RISC-V ${{ matrix.arch }}-bit

Built on: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
Target: riscv${{ matrix.arch }}-unknown-linux-gnu

Usage:
1. Copy busybox to your target system
2. Create symlinks: ./busybox --install -s .
3. Or run commands directly: ./busybox ls, ./busybox sh, etc.

Available commands:
EOF

        echo $COMMANDS | tr ' ' '\n' >> README.txt

        # 打包 tar.gz
        cd /tmp
        tar -czf ${{ steps.version.outputs.release_name }}.tar.gz -C busybox-package .

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.version.outputs.release_name }}
        path: /tmp/${{ steps.version.outputs.release_name }}.tar.gz
        retention-days: 30

  release:
    needs: build-busybox
    runs-on: ubuntu-22.04
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'

    steps:
    - name: Download all build artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./packages

    - name: Prepare release assets
      run: |
        mkdir -p ./release-assets
        find ./packages -name "*.tar.gz" -exec cp {} ./release-assets/ \;

    - name: Delete existing release if it exists
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        RELEASE_TAG="${{ github.ref_name }}"
        RELEASE_ID=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
          "https://api.github.com/repos/${{ github.repository }}/releases/tags/$RELEASE_TAG" | jq -r '.id // empty')
        if [ ! -z "$RELEASE_ID" ] && [ "$RELEASE_ID" != "null" ]; then
          curl -s -X DELETE -H "Authorization: Bearer $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID"
        fi

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name || needs.build-busybox.outputs.busybox_version }}
        name: "Busybox ${{ needs.build-busybox.outputs.busybox_version }} for RISC-V"
        body: |
          # Busybox Release ${{ needs.build-busybox.outputs.busybox_version }} for RISC-V

          Cross-compiled Busybox based on upstream version **${{ needs.build-busybox.outputs.busybox_version }}**.

          ## Features
          - ✅ RISC-V 32-bit and 64-bit architectures
          - ✅ Static linked for portability
          - ✅ Full set of Unix utilities in a single binary
          - ✅ Default configuration with most common tools

          ## Usage
          Run commands on your RISC-V target system as described in README.
        files: ./release-assets/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

