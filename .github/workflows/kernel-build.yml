name: Build Linux Kernel with LLVM Clang

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch:
          - aarch64
          - riscv64
        include:
          - arch: aarch64
            cross_compile_prefix: aarch64-linux-gnu-
            llvm_cross_compile_prefix: llvm-aarch64-
          - arch: riscv64
            cross_compile_prefix: riscv64-linux-gnu-
            llvm_cross_compile_prefix: llvm-riscv64-

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for tag access

      - name: Get Linux Kernel version from tag
        id: get_version
        run: echo "KERNEL_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Download Linux Kernel source
        run: |
          git clone --depth 1 --branch v${{ steps.get_version.outputs.KERNEL_VERSION }} https://github.com/torvalds/linux.git linux-kernel
          cd linux-kernel
          git checkout v${{ steps.get_version.outputs.KERNEL_VERSION }}

      - name: Download LLVM Clang toolchain
        run: |
          wget https://github.com/OS-Jerry/My-llvm-clang-toolchain/releases/download/llvmorg-21.1.0/clang-toolchain-llvmorg-21.1.0.tar.gz -O clang-toolchain.tar.gz
          tar -xf clang-toolchain.tar.gz
          echo "$(pwd)/clang-toolchain/bin" >> $GITHUB_PATH

      - name: Set up build environment
        run: |
          echo "ARCH=${{ matrix.arch }}" >> $GITHUB_ENV
          echo "CROSS_COMPILE=${{ matrix.cross_compile_prefix }}" >> $GITHUB_ENV
          echo "CC=${{ matrix.llvm_cross_compile_prefix }}clang" >> $GITHUB_ENV
          echo "LD=${{ matrix.llvm_cross_compile_prefix }}ld.lld" >> $GITHUB_ENV
          echo "AR=${{ matrix.llvm_cross_compile_prefix }}llvm-ar" >> $GITHUB_ENV
          echo "NM=${{ matrix.llvm_cross_compile_prefix }}llvm-nm" >> $GITHUB_ENV
          echo "OBJCOPY=${{ matrix.llvm_cross_compile_prefix }}llvm-objcopy" >> $GITHUB_ENV
          echo "OBJDUMP=${{ matrix.llvm_cross_compile_prefix }}llvm-objdump" >> $GITHUB_ENV
          echo "STRIP=${{ matrix.llvm_cross_compile_prefix }}llvm-strip" >> $GITHUB_ENV

      - name: Configure and build Kernel for ${{ matrix.arch }}
        working-directory: linux-kernel
        run: |
          make defconfig
          make -j$(nproc) bindeb-pkg

      - name: Upload Kernel packages to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-packages-${{ matrix.arch }}
          path: linux-kernel/*.deb

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get Linux Kernel version from tag
        id: get_version
        run: echo "KERNEL_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Download all Kernel packages artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.KERNEL_VERSION }}
          name: Linux Kernel v${{ steps.get_version.outputs.KERNEL_VERSION }} (LLVM Clang)
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        run: |
          find artifacts -type f -name "*.deb" -print0 | xargs -0 -I {} gh release upload v${{ steps.get_version.outputs.KERNEL_VERSION }} {} --repo ${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


